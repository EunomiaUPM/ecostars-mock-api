openapi: 3.0.0
info:
  title: API de Hoteles y Métricas
  version: 1.0.1
  description: API para la gestión de hoteles y sus métricas de sostenibilidad (energía, agua, CO2).
  contact:
    name: Equipo de API
    email: api-support@example.com
servers:
  - url: http://localhost:8081
    description: Servidor de desarrollo local
tags:
  - name: Hotels
    description: Operaciones relacionadas con la gestión de hoteles.
  - name: Measures
    description: Operaciones relacionadas con las métricas de sostenibilidad de los hoteles.
paths:
  /hotels:
    get:
      summary: Listar todos los hoteles
      description: Obtiene una lista paginada de todos los hoteles, con opción de filtrado.
      tags:
        - Hotels
      parameters:
        - name: city
          in: query
          description: Filtrar hoteles por ciudad.
          required: false
          schema:
            type: string
        - name: stars
          in: query
          description: Filtrar hoteles por número de estrellas.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: limit
          in: query
          description: Número máximo de hoteles a devolver.
          required: false
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: Número de hoteles a omitir (para paginación).
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Lista de hoteles obtenida con éxito.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hotel'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      summary: Crear un nuevo hotel
      description: Registra un nuevo hotel en la base de datos.
      tags:
        - Hotels
      requestBody:
        description: Datos del hotel a crear.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HotelInput'
      responses:
        '201':
          description: Hotel creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
  /hotels/{hotelId}:
    get:
      summary: Obtener un hotel por su ID
      description: Recupera la información detallada de un hotel específico.
      tags:
        - Hotels
      parameters:
        - $ref: '#/components/parameters/HotelId'
      responses:
        '200':
          description: Datos del hotel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hotel'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /hotels/{hotelId}/measures:
    get:
      summary: Obtener métricas de un hotel
      description: Recupera una lista de todas las métricas de sostenibilidad registradas para un hotel específico.
      tags:
        - Measures
      parameters:
        - $ref: '#/components/parameters/HotelId'
        - name: year
          in: query
          description: Filtrar métricas por año.
          required: false
          schema:
            type: integer
            example: 2024
      responses:
        '200':
          description: Lista de métricas del hotel.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Measure'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
  /measures:
    post:
      summary: Registrar nuevas métricas para un hotel
      description: Añade un nuevo registro de métricas de sostenibilidad (agua, energía, etc.) para un hotel.
      tags:
        - Measures
      requestBody:
        description: Datos de la métrica a registrar.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeasureInput'
      responses:
        '201':
          description: Métrica creada con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measure'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: El 'hotel_id' proporcionado en el cuerpo no existe.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  schemas:
    Hotel:
      type: object
      properties:
        id:
          type: integer
          description: Identificador único del hotel.
          example: 1
          readOnly: true
        name:
          type: string
          description: Nombre del hotel.
          example: 'Hotel Gran Vía'
        address:
          type: string
          description: Dirección física del hotel.
          example: 'Calle Gran Vía, 10'
        city:
          type: string
          description: Ciudad donde se ubica el hotel.
          example: 'Madrid'
        country:
          type: string
          description: País donde se ubica el hotel.
          example: 'España'
        stars:
          type: integer
          description: Categoría del hotel (1-5 estrellas).
          example: 4
          minimum: 1
          maximum: 5
        created_at:
          type: string
          format: date-time
          description: Fecha y hora de creación del registro.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización.
          readOnly: true
      required:
        - name
        - city
        - country
    HotelInput:
      type: object
      description: Esquema para la creación de un nuevo hotel.
      properties:
        name:
          type: string
          description: Nombre del hotel.
          example: 'Hotel Gran Vía'
        address:
          type: string
          description: Dirección física del hotel.
          example: 'Calle Gran Vía, 10'
        city:
          type: string
          description: Ciudad donde se ubica el hotel.
          example: 'Madrid'
        country:
          type: string
          description: País donde se ubica el hotel.
          example: 'España'
        stars:
          type: integer
          description: Categoría del hotel (1-5 estrellas).
          example: 4
          minimum: 1
          maximum: 5
      required:
        - name
        - city
        - country
    Measure:
      type: object
      description: Esquema completo de una métrica de sostenibilidad.
      properties:
        id:
          type: integer
          description: Identificador único de la métrica.
          readOnly: true
        hotel_id:
          type: integer
          description: ID del hotel al que pertenece la métrica.
        year:
          type: integer
          description: Año al que corresponden los datos.
        # ... (Aquí irían todas las propiedades que definiste) ...
        rooms:
          type: integer
        stays:
          type: integer
        gasKwh:
          type: integer
        waterM3:
          type: integer
        occupied:
          type: integer
        deviation:
          type: number
        energyKwh:
          type: number
        ratingCo2:
          type: number
        totalArea:
          type: integer
        staysPerRN:
          type: number
        electricity:
          type: number
        ratingCo2RN:
          type: number
        ratingWater:
          type: number
        deviationCo2:
          type: number
        ratingEnergy:
          type: number
        # ... (etc. He omitido el resto por brevedad, pero irían todas aquí) ...
        energyKwhWithCo2Compensation:
          type: number
        ratingEnergyWithCo2Compensation:
          type: number
        deviationEnergyWithCo2Compensation:
          type: number
        created_at:
          type: string
          format: date-time
          description: Fecha y hora de creación del registro.
          readOnly: true
        updated_at:
          type: string
          format: date-time
          description: Fecha y hora de la última actualización.
          readOnly: true
      required:
        - hotel_id
        - year
    MeasureInput:
      type: object
      description: Esquema para el registro de una nueva métrica.
      properties:
        hotel_id:
          type: integer
          description: ID del hotel al que pertenece la métrica.
        year:
          type: integer
          description: Año al que corresponden los datos.
        # ... (Aquí irían todas las propiedades que definiste) ...
        rooms:
          type: integer
        stays:
          type: integer
        gasKwh:
          type: integer
        waterM3:
          type: integer
        occupied:
          type: integer
        deviation:
          type: number
        energyKwh:
          type: number
        ratingCo2:
          type: number
        totalArea:
          type: integer
        staysPerRN:
          type: number
        electricity:
          type: number
        ratingCo2RN:
          type: number
        ratingWater:
          type: number
        deviationCo2:
          type: number
        ratingEnergy:
          type: number
        # ... (etc. He omitido el resto por brevedad, pero irían todas aquí) ...
        energyKwhWithCo2Compensation:
          type: number
        ratingEnergyWithCo2Compensation:
          type: number
        deviationEnergyWithCo2Compensation:
          type: number
      required:
        - hotel_id
        - year
    Error:
      type: object
      description: Esquema estandarizado para respuestas de error.
      properties:
        code:
          type: string
          description: Un código de error interno de la aplicación.
          example: 'NOT_FOUND'
        message:
          type: string
          description: Un mensaje legible explicando el error.
          example: 'El recurso solicitado no pudo ser encontrado.'
      required:
        - code
        - message
  parameters:
    HotelId:
      name: hotelId
      in: path
      description: Identificador único del hotel.
      required: true
      schema:
        type: integer
      example: 1
  responses:
    BadRequest:
      description: La solicitud es inválida o malformada.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: El recurso solicitado no pudo ser encontrado.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Error interno del servidor.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'